generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String   @unique
  emailVerified DateTime?
  password      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  image         String?
  role          String   @default("CUSTOMER")
  sessions      Session[]
  products      Product[] @relation("ProductOwner")
}

model Session {
  id            String   @id @default(cuid()) @map("_id") @db.ObjectId
  sessionToken  String   @unique
  userId        String   @db.ObjectId
  user          User     @relation(fields: [userId], references: [id])
  expires       DateTime
}

model Product {
  id              String   @id @default(cuid()) @map("_id") @db.ObjectId
  name            String
  price           Float
  description     String
  mainImage       String
  additionalImages String[]
  category        String
  brand           String
  sizes           String[]
  colors          String[]
  material        String
  stock           Int
  numReviews      Int      @default(0)
  averageRating   Float    @default(0)
  ratings         Rating[]
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  ownerId         String   @db.ObjectId
  owner           User     @relation("ProductOwner", fields: [ownerId], references: [id])
}

model Rating {
  id         String   @id @default(cuid()) @map("_id") @db.ObjectId
  rating     Int
  productId  String   @db.ObjectId
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  product  Product @relation(fields: [productId], references: [id])
}

model VerificationToken {
  identifier String   @id @map("_id")
  token      String   @unique
  expires    DateTime

  @@index([identifier, token], map: "VerificationToken_identifier_token_idx")
}